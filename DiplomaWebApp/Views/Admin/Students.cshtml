@model List<Student>
<h1>Список Студентов</h1>
@Html.ActionLink("Создать студента", "CreateStudent", "Admin")
<table border="1">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Имя
            </th>
            <th>
                Фамилия
            </th>
            <th>
                Отчество
            </th>
            <th>
                Email
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody id="students">
        @foreach (Student student in Model)
        {
            <tr id="@student.Id">
                <td>
                    @student.Id
                </td>
                <td>
                    @student.Name
                </td>
                <td>
                    @student.Surname
                </td>
                <td>
                    @student.Fatname
                </td>
                <td>
                    @student.Email
                </td>
                <td>
                    @Html.ActionLink("Изменить", "Student", "Admin", new { id = student.Id })
                    <input type"button" onclick="Delete(@student.Id)" value="Удалить">
                </td>
                <td>
                    
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
    function Delete(id) {
        fetch("/Admin/DeleteStudent/" + id,
            {
                method: "delete",
            }
        ).then((response) => {
            if (response.status == 404)
                alert("Не найдена удаляемая задача.")
            else {
                taskNodes = document.getElementById("students")
                taskNodes.removeChild(FindNode(taskNodes, id))
                return response.json()
            }
        }).then((body) => {
            alert(body.message);
        })
    }
    function FindNode(taskNodes, id) {
        for (let i = 0; i < taskNodes.childElementCount; i++) {
            if (taskNodes.children[i].id == id)
                return taskNodes.children[i];
        }
    }
</script>